<?xml version="1.0" encoding="ASCII"?>
<skyway:SkywayServiceOperation xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bean="model.bean" xmlns:skyway="model.service.skyway" xmlns:type="model.type" description="Save an existing Person entity" internalId="a7b75098-ec25-4045-81ad-fdd4c29281ab"><inputs name="id"><dataType xsi:type="type:PrimitiveDataType" type="INTEGER"/></inputs><inputs name="related_person"><dataType xsi:type="type:ComplexDataType"><type href="../../../domain/Person.datatype#/"/></dataType></inputs><outputs name="blog"><dataType xsi:type="type:ComplexDataType"><type href="../../../domain/Blog.datatype#/"/></dataType></outputs><implementation xsi:type="bean:TextualMethodImplementation" text="Blog blog = blogDAO.findBlogByPrimaryKey(id, -1, -1);&#xD;&#xA;Person existingperson = personDAO.findPersonByPrimaryKey(related_person.getId());&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// copy into the existing record to preserve existing relationships&#xD;&#xA;if (existingperson != null)&#x9;{&#xD;&#xA;&#x9;&#x9;existingperson.setId (&#xD;&#xA;&#x9;&#x9;related_person.getId());&#xD;&#xA;&#x9;&#x9;existingperson.setFirstname (&#xD;&#xA;&#x9;&#x9;related_person.getFirstname());&#xD;&#xA;&#x9;&#x9;existingperson.setLastname (&#xD;&#xA;&#x9;&#x9;related_person.getLastname());&#xD;&#xA;&#x9;&#x9;existingperson.setEmail (&#xD;&#xA;&#x9;&#x9;related_person.getEmail());&#xD;&#xA;&#x9;&#x9;existingperson.setAddress (&#xD;&#xA;&#x9;&#x9;related_person.getAddress());&#xD;&#xA;&#x9;&#x9;existingperson.setCity (&#xD;&#xA;&#x9;&#x9;related_person.getCity());&#xD;&#xA;&#x9;&#x9;existingperson.setPassword (&#xD;&#xA;&#x9;&#x9;related_person.getPassword());&#xD;&#xA;&#x9;&#x9;existingperson.setDtype (&#xD;&#xA;&#x9;&#x9;related_person.getDtype());&#xD;&#xA;&#x9;related_person = existingperson;&#xD;&#xA;}&#xD;&#xA;else&#x9;{&#xD;&#xA;&#x9;related_person = personDAO.store(related_person);&#xD;&#xA;&#x9;personDAO.flush();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;blog.setPerson(related_person);&#xD;&#xA;related_person.getBlogs().add(blog);&#xD;&#xA;blog = blogDAO.store(blog);&#xD;&#xA;blogDAO.flush();&#xD;&#xA;&#xD;&#xA;related_person = personDAO.store(related_person);&#xD;&#xA;personDAO.flush();&#xD;&#xA;&#xD;&#xA;return blog;"/><modifiers>PUBLIC</modifiers></skyway:SkywayServiceOperation>
